#!/usr/bin/env cbqn
‚ü®For, ParseInts, StartsWith‚ü© ‚Üê ‚Ä¢Import "../lib.bqn"
Decode ‚Üê { F x: 0 }
# The first floor contains a hydrogen-compatible microchip and a lithium-compatible microchip.
# The second floor contains a hydrogen generator.
# The third floor contains a lithium generator.
# The fourth floor contains nothing relevant.
‚Ä¢Show (<"naive coding")‚àæ< 4‚Äø5‚•ä‚àæ¬¥ ‚ü®
    0‚Äø0‚Äø0‚Äø0‚Äø0
    0‚Äø0‚Äø0‚Äø1‚Äø0
    0‚Äø1‚Äø0‚Äø0‚Äø0
    1‚Äø0‚Äø1‚Äø0‚Äø1
‚ü©
‚Ä¢Show "cost‚Äøflag‚Äøstatus for Dijkstra"‚Äø 0‚Äø1‚Äø0‚Äø1‚Äø0‚Äø2‚Äø0
‚Ä¢Show "flag‚Äøcost[0√ó256+1√ó64+0√ó16+2√ó4+0√ó1=72] for Dijkstra"‚Äø 1‚Äø0
state ‚Üê ‚àò‚Äø2 ‚•ä ‚Üï4‚ãÜ5
ToIndex ‚Üê (+‚üú(4‚ä∏√ó))¬¥‚åΩ
ToState ‚Üê {
    ¬Ø5‚Üë {
        F 0: ‚ü®0‚ü©;
        F n: {ùï© ‚àæ F (n-ùï©)√∑4} 4|n
    } ùï©
}
example_start ‚Üê ToIndex ‚ü®0, 1, 0, 2, 0‚ü©
‚Ä¢Show example_start
‚Ä¢Show ToState example_start
‚Ä¢Show ToState 600
# ‚Ä¢Show ‚âç‚üú((Decode(1‚ä∏‚äë))¬®) example
# Part 1: #####################################
# ‚Ä¢Show +¬¥ Decode1¬® ‚•ä ‚Ä¢FLines "../../data/2016/input-day11.txt"
# Part 2: #####################################
# ‚Ä¢Show +¬¥ {1 Decode2 ùï©}¬® ‚•ä ‚Ä¢FLines "../../data/2016/input-day09.txt"
